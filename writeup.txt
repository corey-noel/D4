The first thing I did upon starting this project was work on the hashing. My initial implementation of hashing involved performing the drawn out calculation each time (involving taking some number to the 2000th power), but that's slow. We can make a speed-space trade-off here, and use more disk/memory to be faster. Since each character value from 0-255 yields the same result each time from the individual hash-calculations, I was able to make a table of those individual character has results that performed a simple look-up.

Next, I realized there was another easy optimization to hashing that I could make: since we are summing the hashed values of each character, we can preemptively perform the modulus division on them as well, allowing us to avoid storing or loading 1000-digit long numbers. Both of these optimizations were made by writing a script to automatically produce the code for me (table_generation.rb).
